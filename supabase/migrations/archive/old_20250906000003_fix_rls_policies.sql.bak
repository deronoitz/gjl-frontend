-- Fixed RLS Policies to avoid infinite recursion
-- This file fixes the circular dependency issue in the profiles table policies

-- Drop existing problematic policies
DROP POLICY IF EXISTS "Admins can view all profiles" ON public.profiles;
DROP POLICY IF EXISTS "Admins can insert profiles" ON public.profiles;  
DROP POLICY IF EXISTS "Admins can update all profiles" ON public.profiles;

-- Create a function to check if current user is admin (to avoid recursion)
CREATE OR REPLACE FUNCTION public.is_admin(user_id UUID DEFAULT auth.uid())
RETURNS BOOLEAN
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
  -- Query auth.users directly to avoid recursion with profiles table
  RETURN EXISTS (
    SELECT 1 
    FROM auth.users 
    WHERE id = user_id 
    AND (raw_user_meta_data->>'role')::text = 'admin'
  );
END;
$$;

-- Recreate admin policies using the function
CREATE POLICY "Admins can view all profiles" ON public.profiles
    FOR SELECT USING (public.is_admin());

CREATE POLICY "Admins can insert profiles" ON public.profiles
    FOR INSERT WITH CHECK (public.is_admin());

CREATE POLICY "Admins can update all profiles" ON public.profiles
    FOR UPDATE USING (public.is_admin());

CREATE POLICY "Admins can delete profiles" ON public.profiles
    FOR DELETE USING (public.is_admin());

-- Fix other admin policies to use the same pattern
DROP POLICY IF EXISTS "Admins can view all payments" ON public.payments;
DROP POLICY IF EXISTS "Admins can view all announcements" ON public.announcements;
DROP POLICY IF EXISTS "Admins can manage gallery images" ON public.gallery_images;  
DROP POLICY IF EXISTS "Admins can manage albums" ON public.albums;

-- Recreate payment policies
CREATE POLICY "Admins can manage all payments" ON public.payments
    FOR ALL USING (public.is_admin());

-- Recreate announcement policies  
CREATE POLICY "Admins can manage all announcements" ON public.announcements
    FOR ALL USING (public.is_admin());

-- Recreate gallery policies
CREATE POLICY "Admins can manage gallery images" ON public.gallery_images
    FOR ALL USING (public.is_admin());

-- Recreate album policies
CREATE POLICY "Admins can manage albums" ON public.albums
    FOR ALL USING (public.is_admin());
